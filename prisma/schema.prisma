// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String   @unique
  name        String
  active      Boolean   @default(false)
  phoneNumber String   @unique
  dayEntries  DayEntry[]
  timecards   TimeCard[]
  projects    UserProject[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model Project {
  id          String @id @default(cuid())
  name        String @unique
  description String?
  status      Status @default(NOT_STARTED)
  startAt     DateTime
  dueAt       DateTime
  tasks       Task[]
  dayEntries  DayEntry[]
  timecards   TimeCard[]
  users       UserProject[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model Task {
  id            String @id @default(cuid())
  name String?  @unique
  description   String?
  project       Project @relation(fields: [projectId], references: [id])
  projectId     String
  dayEntries    DayEntry[]
  timecards     TimeCard[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model TimeCard {
  id          String @id @default(cuid())
  dayEntries  DayEntry[]
  user        User @relation(fields: [userId], references: [id])
  userId      String
  project     Project @relation(fields: [projectId], references: [id])
  projectId   String
  task        Task @relation(fields: [taskId], references: [id])
  taskId      String
  weekOf      DateTime
  monday      Float
  tuesday     Float
  wednesday   Float
  thursday    Float
  friday      Float
  saturday    Float
  sunday      Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model DayEntry {
  id          String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  weekOf DateTime
  hours Float
  startedAt DateTime
  endedAt DateTime
  weekDay String
  notes String?
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  task Task @relation(fields: [taskId], references: [id])
  taskId String
  timeCard TimeCard @relation(fields: [timeCardId], references: [id])
  timeCardId String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
}

model UserProject {
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())

  @@id([projectId, userId])
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  SKIPPED
  DONE
}
